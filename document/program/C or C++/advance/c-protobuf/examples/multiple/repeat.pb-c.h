/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: repeat.proto */

#ifndef PROTOBUF_C_repeat_2eproto__INCLUDED
#define PROTOBUF_C_repeat_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1001001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _UMessage UMessage;
typedef struct _Head Head;
typedef struct _StatsData StatsData;
typedef struct _RecordStatsRequest RecordStatsRequest;


/* --- enums --- */


/* --- messages --- */

/*
 * ucloud所有协议的总名字空间
 */
struct  _UMessage
{
  ProtobufCMessage base;
  /*
   * 协议头
   */
  Head *head;
  /*
   * 协议体
   */
  RecordStatsRequest *body;
};
#define UMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&umessage__descriptor) \
    , NULL, NULL }


struct  _Head
{
  ProtobufCMessage base;
  /*
   * 版本号
   */
  uint32_t version;
};
#define HEAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&head__descriptor) \
    , 0 }


struct  _StatsData
{
  ProtobufCMessage base;
  /*
   * 数据项ID
   */
  uint32_t num;
};
#define STATS_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stats_data__descriptor) \
    , 0 }


struct  _RecordStatsRequest
{
  ProtobufCMessage base;
  /*
   * 用于分析的元数据
   */
  size_t n_stats_data_list;
  StatsData **stats_data_list;
};
#define RECORD_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&record_stats_request__descriptor) \
    , 0,NULL }


/* UMessage methods */
void   umessage__init
                     (UMessage         *message);
size_t umessage__get_packed_size
                     (const UMessage   *message);
size_t umessage__pack
                     (const UMessage   *message,
                      uint8_t             *out);
size_t umessage__pack_to_buffer
                     (const UMessage   *message,
                      ProtobufCBuffer     *buffer);
UMessage *
       umessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   umessage__free_unpacked
                     (UMessage *message,
                      ProtobufCAllocator *allocator);
/* Head methods */
void   head__init
                     (Head         *message);
size_t head__get_packed_size
                     (const Head   *message);
size_t head__pack
                     (const Head   *message,
                      uint8_t             *out);
size_t head__pack_to_buffer
                     (const Head   *message,
                      ProtobufCBuffer     *buffer);
Head *
       head__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   head__free_unpacked
                     (Head *message,
                      ProtobufCAllocator *allocator);
/* StatsData methods */
void   stats_data__init
                     (StatsData         *message);
size_t stats_data__get_packed_size
                     (const StatsData   *message);
size_t stats_data__pack
                     (const StatsData   *message,
                      uint8_t             *out);
size_t stats_data__pack_to_buffer
                     (const StatsData   *message,
                      ProtobufCBuffer     *buffer);
StatsData *
       stats_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stats_data__free_unpacked
                     (StatsData *message,
                      ProtobufCAllocator *allocator);
/* RecordStatsRequest methods */
void   record_stats_request__init
                     (RecordStatsRequest         *message);
size_t record_stats_request__get_packed_size
                     (const RecordStatsRequest   *message);
size_t record_stats_request__pack
                     (const RecordStatsRequest   *message,
                      uint8_t             *out);
size_t record_stats_request__pack_to_buffer
                     (const RecordStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
RecordStatsRequest *
       record_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   record_stats_request__free_unpacked
                     (RecordStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UMessage_Closure)
                 (const UMessage *message,
                  void *closure_data);
typedef void (*Head_Closure)
                 (const Head *message,
                  void *closure_data);
typedef void (*StatsData_Closure)
                 (const StatsData *message,
                  void *closure_data);
typedef void (*RecordStatsRequest_Closure)
                 (const RecordStatsRequest *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor umessage__descriptor;
extern const ProtobufCMessageDescriptor head__descriptor;
extern const ProtobufCMessageDescriptor stats_data__descriptor;
extern const ProtobufCMessageDescriptor record_stats_request__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_repeat_2eproto__INCLUDED */
