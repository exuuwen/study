// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unetanalysis.177000.178000.proto

#ifndef PROTOBUF_unetanalysis_2e177000_2e178000_2eproto__INCLUDED
#define PROTOBUF_unetanalysis_2e177000_2e178000_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ucloud.pb.h"
// @@protoc_insertion_point(includes)

namespace ucloud {
namespace unetanalysis {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();

class StatsData;
class RecordStatsRequest;
class StatsDataEx;
class RecordStatsExRequest;
class GetNetItemStatsRequest;
class StatsInfo;
class MonitorData;
class GetItemStatsResponse;
class GetNetRankRequest;
class RankData;
class GetNetRankResponse;
class Ip_Info;
class GetIpsRequest;
class GetIpsResponse;
class PushIpsFileRequest;
class SetUserLvlRequest;
class SetUserLvlResponse;
class GetUserLvlRequest;
class GetUserLvlResponse;
class UuidExInfo;
class GetNetItemStatsForUserRequest;
class GetItemStatsForUserResponse;

enum MessageType {
  BEGINNING_ID = 177000,
  RECORD_STATS_REQUEST = 177001,
  RECORD_STATS_EX_REQUEST = 177002,
  GET_NET_ITEM_STATS_REQUEST = 177003,
  GET_ITEM_STATS_RESPONSE = 177004,
  GET_NET_RANK_REQUEST = 177005,
  GET_NET_RANK_RESPONSE = 177006,
  GET_IPS_REQUEST = 177007,
  GET_IPS_RESPONSE = 177008,
  PUSH_IPS_FILE_REQUEST = 177009,
  SET_USER_LVL_REQUEST = 177011,
  SET_USER_LVL_RESPONSE = 177012,
  GET_USER_LVL_REQUEST = 177013,
  GET_USER_LVL_RESPONSE = 177014,
  GET_NET_ITEM_STATS_FOR_USER_REQUEST = 177015,
  GET_ITEM_STATS_FOR_USER_RESPONSE = 177016,
  ENDING_ID = 178000
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = BEGINNING_ID;
const MessageType MessageType_MAX = ENDING_ID;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class StatsData : public ::google::protobuf::Message {
 public:
  StatsData();
  virtual ~StatsData();
  
  StatsData(const StatsData& from);
  
  inline StatsData& operator=(const StatsData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatsData& default_instance();
  
  void Swap(StatsData* other);
  
  // implements Message ----------------------------------------------
  
  StatsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatsData& from);
  void MergeFrom(const StatsData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string uuid = 10;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // required uint32 item_id = 20;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 20;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 is_regional = 70;
  inline bool has_is_regional() const;
  inline void clear_is_regional();
  static const int kIsRegionalFieldNumber = 70;
  inline ::google::protobuf::uint32 is_regional() const;
  inline void set_is_regional(::google::protobuf::uint32 value);
  
  // required uint32 region_id = 30;
  inline bool has_region_id() const;
  inline void clear_region_id();
  static const int kRegionIdFieldNumber = 30;
  inline ::google::protobuf::uint32 region_id() const;
  inline void set_region_id(::google::protobuf::uint32 value);
  
  // required uint32 isp_id = 40;
  inline bool has_isp_id() const;
  inline void clear_isp_id();
  static const int kIspIdFieldNumber = 40;
  inline ::google::protobuf::uint32 isp_id() const;
  inline void set_isp_id(::google::protobuf::uint32 value);
  
  // required string no_regional_key = 80;
  inline bool has_no_regional_key() const;
  inline void clear_no_regional_key();
  static const int kNoRegionalKeyFieldNumber = 80;
  inline const ::std::string& no_regional_key() const;
  inline void set_no_regional_key(const ::std::string& value);
  inline void set_no_regional_key(const char* value);
  inline void set_no_regional_key(const char* value, size_t size);
  inline ::std::string* mutable_no_regional_key();
  inline ::std::string* release_no_regional_key();
  
  // required uint64 value = 50;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 50;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);
  
  // required uint32 time = 60;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 60;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.StatsData)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_is_regional();
  inline void clear_has_is_regional();
  inline void set_has_region_id();
  inline void clear_has_region_id();
  inline void set_has_isp_id();
  inline void clear_has_isp_id();
  inline void set_has_no_regional_key();
  inline void clear_has_no_regional_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uuid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 is_regional_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 isp_id_;
  ::std::string* no_regional_key_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static StatsData* default_instance_;
};
// -------------------------------------------------------------------

class RecordStatsRequest : public ::google::protobuf::Message {
 public:
  RecordStatsRequest();
  virtual ~RecordStatsRequest();
  
  RecordStatsRequest(const RecordStatsRequest& from);
  
  inline RecordStatsRequest& operator=(const RecordStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordStatsRequest& default_instance();
  
  void Swap(RecordStatsRequest* other);
  
  // implements Message ----------------------------------------------
  
  RecordStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecordStatsRequest& from);
  void MergeFrom(const RecordStatsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ucloud.unetanalysis.StatsData stats_data_list = 10;
  inline int stats_data_list_size() const;
  inline void clear_stats_data_list();
  static const int kStatsDataListFieldNumber = 10;
  inline const ::ucloud::unetanalysis::StatsData& stats_data_list(int index) const;
  inline ::ucloud::unetanalysis::StatsData* mutable_stats_data_list(int index);
  inline ::ucloud::unetanalysis::StatsData* add_stats_data_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsData >&
      stats_data_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsData >*
      mutable_stats_data_list();
  
  // optional uint32 dpdk_id = 20;
  inline bool has_dpdk_id() const;
  inline void clear_dpdk_id();
  static const int kDpdkIdFieldNumber = 20;
  inline ::google::protobuf::uint32 dpdk_id() const;
  inline void set_dpdk_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.RecordStatsRequest)
 private:
  inline void set_has_dpdk_id();
  inline void clear_has_dpdk_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsData > stats_data_list_;
  ::google::protobuf::uint32 dpdk_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static RecordStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class StatsDataEx : public ::google::protobuf::Message {
 public:
  StatsDataEx();
  virtual ~StatsDataEx();
  
  StatsDataEx(const StatsDataEx& from);
  
  inline StatsDataEx& operator=(const StatsDataEx& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatsDataEx& default_instance();
  
  void Swap(StatsDataEx* other);
  
  // implements Message ----------------------------------------------
  
  StatsDataEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatsDataEx& from);
  void MergeFrom(const StatsDataEx& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string uuid = 10;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // required uint32 item_id = 20;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 20;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 is_regional = 90;
  inline bool has_is_regional() const;
  inline void clear_is_regional();
  static const int kIsRegionalFieldNumber = 90;
  inline ::google::protobuf::uint32 is_regional() const;
  inline void set_is_regional(::google::protobuf::uint32 value);
  
  // required uint32 region_id = 30;
  inline bool has_region_id() const;
  inline void clear_region_id();
  static const int kRegionIdFieldNumber = 30;
  inline ::google::protobuf::uint32 region_id() const;
  inline void set_region_id(::google::protobuf::uint32 value);
  
  // required uint32 isp_id = 40;
  inline bool has_isp_id() const;
  inline void clear_isp_id();
  static const int kIspIdFieldNumber = 40;
  inline ::google::protobuf::uint32 isp_id() const;
  inline void set_isp_id(::google::protobuf::uint32 value);
  
  // required string no_regional_key = 100;
  inline bool has_no_regional_key() const;
  inline void clear_no_regional_key();
  static const int kNoRegionalKeyFieldNumber = 100;
  inline const ::std::string& no_regional_key() const;
  inline void set_no_regional_key(const ::std::string& value);
  inline void set_no_regional_key(const char* value);
  inline void set_no_regional_key(const char* value, size_t size);
  inline ::std::string* mutable_no_regional_key();
  inline ::std::string* release_no_regional_key();
  
  // required uint64 value = 50;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 50;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);
  
  // required uint32 time = 60;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 60;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 aggregator = 70;
  inline bool has_aggregator() const;
  inline void clear_aggregator();
  static const int kAggregatorFieldNumber = 70;
  inline ::google::protobuf::uint32 aggregator() const;
  inline void set_aggregator(::google::protobuf::uint32 value);
  
  // optional uint32 period = 80;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 80;
  inline ::google::protobuf::uint32 period() const;
  inline void set_period(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.StatsDataEx)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_is_regional();
  inline void clear_has_is_regional();
  inline void set_has_region_id();
  inline void clear_has_region_id();
  inline void set_has_isp_id();
  inline void clear_has_isp_id();
  inline void set_has_no_regional_key();
  inline void clear_has_no_regional_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_aggregator();
  inline void clear_has_aggregator();
  inline void set_has_period();
  inline void clear_has_period();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uuid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 is_regional_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 isp_id_;
  ::std::string* no_regional_key_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 aggregator_;
  ::google::protobuf::uint32 period_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static StatsDataEx* default_instance_;
};
// -------------------------------------------------------------------

class RecordStatsExRequest : public ::google::protobuf::Message {
 public:
  RecordStatsExRequest();
  virtual ~RecordStatsExRequest();
  
  RecordStatsExRequest(const RecordStatsExRequest& from);
  
  inline RecordStatsExRequest& operator=(const RecordStatsExRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordStatsExRequest& default_instance();
  
  void Swap(RecordStatsExRequest* other);
  
  // implements Message ----------------------------------------------
  
  RecordStatsExRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecordStatsExRequest& from);
  void MergeFrom(const RecordStatsExRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ucloud.unetanalysis.StatsDataEx stats_data_ex_list = 10;
  inline int stats_data_ex_list_size() const;
  inline void clear_stats_data_ex_list();
  static const int kStatsDataExListFieldNumber = 10;
  inline const ::ucloud::unetanalysis::StatsDataEx& stats_data_ex_list(int index) const;
  inline ::ucloud::unetanalysis::StatsDataEx* mutable_stats_data_ex_list(int index);
  inline ::ucloud::unetanalysis::StatsDataEx* add_stats_data_ex_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsDataEx >&
      stats_data_ex_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsDataEx >*
      mutable_stats_data_ex_list();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.RecordStatsExRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsDataEx > stats_data_ex_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static RecordStatsExRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetNetItemStatsRequest : public ::google::protobuf::Message {
 public:
  GetNetItemStatsRequest();
  virtual ~GetNetItemStatsRequest();
  
  GetNetItemStatsRequest(const GetNetItemStatsRequest& from);
  
  inline GetNetItemStatsRequest& operator=(const GetNetItemStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNetItemStatsRequest& default_instance();
  
  void Swap(GetNetItemStatsRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetNetItemStatsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNetItemStatsRequest& from);
  void MergeFrom(const GetNetItemStatsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string uuid = 10;
  inline int uuid_size() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid(int index) const;
  inline ::std::string* mutable_uuid(int index);
  inline void set_uuid(int index, const ::std::string& value);
  inline void set_uuid(int index, const char* value);
  inline void set_uuid(int index, const char* value, size_t size);
  inline ::std::string* add_uuid();
  inline void add_uuid(const ::std::string& value);
  inline void add_uuid(const char* value);
  inline void add_uuid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& uuid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_uuid();
  
  // optional string object_name = 20;
  inline bool has_object_name() const;
  inline void clear_object_name();
  static const int kObjectNameFieldNumber = 20;
  inline const ::std::string& object_name() const;
  inline void set_object_name(const ::std::string& value);
  inline void set_object_name(const char* value);
  inline void set_object_name(const char* value, size_t size);
  inline ::std::string* mutable_object_name();
  inline ::std::string* release_object_name();
  
  // optional uint32 item_id = 22;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 22;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 region_id = 23;
  inline bool has_region_id() const;
  inline void clear_region_id();
  static const int kRegionIdFieldNumber = 23;
  inline ::google::protobuf::uint32 region_id() const;
  inline void set_region_id(::google::protobuf::uint32 value);
  
  // optional uint32 isp_id = 24;
  inline bool has_isp_id() const;
  inline void clear_isp_id();
  static const int kIspIdFieldNumber = 24;
  inline ::google::protobuf::uint32 isp_id() const;
  inline void set_isp_id(::google::protobuf::uint32 value);
  
  // optional uint32 start_time = 30;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 30;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);
  
  // optional uint32 end_time = 40;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 40;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);
  
  // optional uint32 user_grain = 50;
  inline bool has_user_grain() const;
  inline void clear_user_grain();
  static const int kUserGrainFieldNumber = 50;
  inline ::google::protobuf::uint32 user_grain() const;
  inline void set_user_grain(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetNetItemStatsRequest)
 private:
  inline void set_has_object_name();
  inline void clear_has_object_name();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_region_id();
  inline void clear_has_region_id();
  inline void set_has_isp_id();
  inline void clear_has_isp_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_user_grain();
  inline void clear_has_user_grain();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> uuid_;
  ::std::string* object_name_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 isp_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 user_grain_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetNetItemStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class StatsInfo : public ::google::protobuf::Message {
 public:
  StatsInfo();
  virtual ~StatsInfo();
  
  StatsInfo(const StatsInfo& from);
  
  inline StatsInfo& operator=(const StatsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatsInfo& default_instance();
  
  void Swap(StatsInfo* other);
  
  // implements Message ----------------------------------------------
  
  StatsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatsInfo& from);
  void MergeFrom(const StatsInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 value = 10;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 10;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);
  
  // required uint32 value_time = 20;
  inline bool has_value_time() const;
  inline void clear_value_time();
  static const int kValueTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 value_time() const;
  inline void set_value_time(::google::protobuf::uint32 value);
  
  // required uint32 region_id = 31;
  inline bool has_region_id() const;
  inline void clear_region_id();
  static const int kRegionIdFieldNumber = 31;
  inline ::google::protobuf::uint32 region_id() const;
  inline void set_region_id(::google::protobuf::uint32 value);
  
  // required uint32 isp_id = 32;
  inline bool has_isp_id() const;
  inline void clear_isp_id();
  static const int kIspIdFieldNumber = 32;
  inline ::google::protobuf::uint32 isp_id() const;
  inline void set_isp_id(::google::protobuf::uint32 value);
  
  // optional string no_regional_key = 33;
  inline bool has_no_regional_key() const;
  inline void clear_no_regional_key();
  static const int kNoRegionalKeyFieldNumber = 33;
  inline const ::std::string& no_regional_key() const;
  inline void set_no_regional_key(const ::std::string& value);
  inline void set_no_regional_key(const char* value);
  inline void set_no_regional_key(const char* value, size_t size);
  inline ::std::string* mutable_no_regional_key();
  inline ::std::string* release_no_regional_key();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.StatsInfo)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_value_time();
  inline void clear_has_value_time();
  inline void set_has_region_id();
  inline void clear_has_region_id();
  inline void set_has_isp_id();
  inline void clear_has_isp_id();
  inline void set_has_no_regional_key();
  inline void clear_has_no_regional_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 value_;
  ::google::protobuf::uint32 value_time_;
  ::google::protobuf::uint32 region_id_;
  ::std::string* no_regional_key_;
  ::google::protobuf::uint32 isp_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static StatsInfo* default_instance_;
};
// -------------------------------------------------------------------

class MonitorData : public ::google::protobuf::Message {
 public:
  MonitorData();
  virtual ~MonitorData();
  
  MonitorData(const MonitorData& from);
  
  inline MonitorData& operator=(const MonitorData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorData& default_instance();
  
  void Swap(MonitorData* other);
  
  // implements Message ----------------------------------------------
  
  MonitorData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonitorData& from);
  void MergeFrom(const MonitorData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string uuid = 10;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // optional uint32 item_id = 30;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 30;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 is_regional = 20;
  inline bool has_is_regional() const;
  inline void clear_is_regional();
  static const int kIsRegionalFieldNumber = 20;
  inline ::google::protobuf::uint32 is_regional() const;
  inline void set_is_regional(::google::protobuf::uint32 value);
  
  // optional uint32 grain_size = 60;
  inline bool has_grain_size() const;
  inline void clear_grain_size();
  static const int kGrainSizeFieldNumber = 60;
  inline ::google::protobuf::uint32 grain_size() const;
  inline void set_grain_size(::google::protobuf::uint32 value);
  
  // repeated .ucloud.unetanalysis.StatsInfo stats_info = 40;
  inline int stats_info_size() const;
  inline void clear_stats_info();
  static const int kStatsInfoFieldNumber = 40;
  inline const ::ucloud::unetanalysis::StatsInfo& stats_info(int index) const;
  inline ::ucloud::unetanalysis::StatsInfo* mutable_stats_info(int index);
  inline ::ucloud::unetanalysis::StatsInfo* add_stats_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsInfo >&
      stats_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsInfo >*
      mutable_stats_info();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.MonitorData)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_is_regional();
  inline void clear_has_is_regional();
  inline void set_has_grain_size();
  inline void clear_has_grain_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uuid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 is_regional_;
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsInfo > stats_info_;
  ::google::protobuf::uint32 grain_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static MonitorData* default_instance_;
};
// -------------------------------------------------------------------

class GetItemStatsResponse : public ::google::protobuf::Message {
 public:
  GetItemStatsResponse();
  virtual ~GetItemStatsResponse();
  
  GetItemStatsResponse(const GetItemStatsResponse& from);
  
  inline GetItemStatsResponse& operator=(const GetItemStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetItemStatsResponse& default_instance();
  
  void Swap(GetItemStatsResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetItemStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetItemStatsResponse& from);
  void MergeFrom(const GetItemStatsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ucloud.ResponseCode rc = 10;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 10;
  inline const ::ucloud::ResponseCode& rc() const;
  inline ::ucloud::ResponseCode* mutable_rc();
  inline ::ucloud::ResponseCode* release_rc();
  
  // repeated .ucloud.unetanalysis.MonitorData monitor_data = 20;
  inline int monitor_data_size() const;
  inline void clear_monitor_data();
  static const int kMonitorDataFieldNumber = 20;
  inline const ::ucloud::unetanalysis::MonitorData& monitor_data(int index) const;
  inline ::ucloud::unetanalysis::MonitorData* mutable_monitor_data(int index);
  inline ::ucloud::unetanalysis::MonitorData* add_monitor_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >&
      monitor_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >*
      mutable_monitor_data();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetItemStatsResponse)
 private:
  inline void set_has_rc();
  inline void clear_has_rc();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ucloud::ResponseCode* rc_;
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData > monitor_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetItemStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetNetRankRequest : public ::google::protobuf::Message {
 public:
  GetNetRankRequest();
  virtual ~GetNetRankRequest();
  
  GetNetRankRequest(const GetNetRankRequest& from);
  
  inline GetNetRankRequest& operator=(const GetNetRankRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNetRankRequest& default_instance();
  
  void Swap(GetNetRankRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetNetRankRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNetRankRequest& from);
  void MergeFrom(const GetNetRankRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 10;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 10;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 start = 20;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 20;
  inline ::google::protobuf::uint32 start() const;
  inline void set_start(::google::protobuf::uint32 value);
  
  // optional uint32 end = 30;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 30;
  inline ::google::protobuf::uint32 end() const;
  inline void set_end(::google::protobuf::uint32 value);
  
  // optional uint32 rank_type = 40;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 40;
  inline ::google::protobuf::uint32 rank_type() const;
  inline void set_rank_type(::google::protobuf::uint32 value);
  
  // optional uint32 time = 50;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 50;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetNetRankRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_end();
  inline void clear_has_end();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 end_;
  ::google::protobuf::uint32 rank_type_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetNetRankRequest* default_instance_;
};
// -------------------------------------------------------------------

class RankData : public ::google::protobuf::Message {
 public:
  RankData();
  virtual ~RankData();
  
  RankData(const RankData& from);
  
  inline RankData& operator=(const RankData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RankData& default_instance();
  
  void Swap(RankData* other);
  
  // implements Message ----------------------------------------------
  
  RankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankData& from);
  void MergeFrom(const RankData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string uuid = 10;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // optional uint64 value = 20;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 20;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.RankData)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uuid_;
  ::google::protobuf::uint64 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static RankData* default_instance_;
};
// -------------------------------------------------------------------

class GetNetRankResponse : public ::google::protobuf::Message {
 public:
  GetNetRankResponse();
  virtual ~GetNetRankResponse();
  
  GetNetRankResponse(const GetNetRankResponse& from);
  
  inline GetNetRankResponse& operator=(const GetNetRankResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNetRankResponse& default_instance();
  
  void Swap(GetNetRankResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetNetRankResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNetRankResponse& from);
  void MergeFrom(const GetNetRankResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ucloud.ResponseCode rc = 10;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 10;
  inline const ::ucloud::ResponseCode& rc() const;
  inline ::ucloud::ResponseCode* mutable_rc();
  inline ::ucloud::ResponseCode* release_rc();
  
  // optional uint32 item_id = 20;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 20;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // repeated .ucloud.unetanalysis.RankData rank_data = 30;
  inline int rank_data_size() const;
  inline void clear_rank_data();
  static const int kRankDataFieldNumber = 30;
  inline const ::ucloud::unetanalysis::RankData& rank_data(int index) const;
  inline ::ucloud::unetanalysis::RankData* mutable_rank_data(int index);
  inline ::ucloud::unetanalysis::RankData* add_rank_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::RankData >&
      rank_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::RankData >*
      mutable_rank_data();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetNetRankResponse)
 private:
  inline void set_has_rc();
  inline void clear_has_rc();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ucloud::ResponseCode* rc_;
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::RankData > rank_data_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetNetRankResponse* default_instance_;
};
// -------------------------------------------------------------------

class Ip_Info : public ::google::protobuf::Message {
 public:
  Ip_Info();
  virtual ~Ip_Info();
  
  Ip_Info(const Ip_Info& from);
  
  inline Ip_Info& operator=(const Ip_Info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ip_Info& default_instance();
  
  void Swap(Ip_Info* other);
  
  // implements Message ----------------------------------------------
  
  Ip_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ip_Info& from);
  void MergeFrom(const Ip_Info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string ip = 10;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 10;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional uint32 account_id = 20;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 20;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.Ip_Info)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ip_;
  ::google::protobuf::uint32 account_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static Ip_Info* default_instance_;
};
// -------------------------------------------------------------------

class GetIpsRequest : public ::google::protobuf::Message {
 public:
  GetIpsRequest();
  virtual ~GetIpsRequest();
  
  GetIpsRequest(const GetIpsRequest& from);
  
  inline GetIpsRequest& operator=(const GetIpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIpsRequest& default_instance();
  
  void Swap(GetIpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetIpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetIpsRequest& from);
  void MergeFrom(const GetIpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string regin = 10;
  inline bool has_regin() const;
  inline void clear_regin();
  static const int kReginFieldNumber = 10;
  inline const ::std::string& regin() const;
  inline void set_regin(const ::std::string& value);
  inline void set_regin(const char* value);
  inline void set_regin(const char* value, size_t size);
  inline ::std::string* mutable_regin();
  inline ::std::string* release_regin();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetIpsRequest)
 private:
  inline void set_has_regin();
  inline void clear_has_regin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* regin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetIpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetIpsResponse : public ::google::protobuf::Message {
 public:
  GetIpsResponse();
  virtual ~GetIpsResponse();
  
  GetIpsResponse(const GetIpsResponse& from);
  
  inline GetIpsResponse& operator=(const GetIpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIpsResponse& default_instance();
  
  void Swap(GetIpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetIpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetIpsResponse& from);
  void MergeFrom(const GetIpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string regin = 10;
  inline bool has_regin() const;
  inline void clear_regin();
  static const int kReginFieldNumber = 10;
  inline const ::std::string& regin() const;
  inline void set_regin(const ::std::string& value);
  inline void set_regin(const char* value);
  inline void set_regin(const char* value, size_t size);
  inline ::std::string* mutable_regin();
  inline ::std::string* release_regin();
  
  // repeated .ucloud.unetanalysis.Ip_Info ips = 20;
  inline int ips_size() const;
  inline void clear_ips();
  static const int kIpsFieldNumber = 20;
  inline const ::ucloud::unetanalysis::Ip_Info& ips(int index) const;
  inline ::ucloud::unetanalysis::Ip_Info* mutable_ips(int index);
  inline ::ucloud::unetanalysis::Ip_Info* add_ips();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::Ip_Info >&
      ips() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::Ip_Info >*
      mutable_ips();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetIpsResponse)
 private:
  inline void set_has_regin();
  inline void clear_has_regin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* regin_;
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::Ip_Info > ips_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetIpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class PushIpsFileRequest : public ::google::protobuf::Message {
 public:
  PushIpsFileRequest();
  virtual ~PushIpsFileRequest();
  
  PushIpsFileRequest(const PushIpsFileRequest& from);
  
  inline PushIpsFileRequest& operator=(const PushIpsFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushIpsFileRequest& default_instance();
  
  void Swap(PushIpsFileRequest* other);
  
  // implements Message ----------------------------------------------
  
  PushIpsFileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushIpsFileRequest& from);
  void MergeFrom(const PushIpsFileRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 10;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 10;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.PushIpsFileRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static PushIpsFileRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetUserLvlRequest : public ::google::protobuf::Message {
 public:
  SetUserLvlRequest();
  virtual ~SetUserLvlRequest();
  
  SetUserLvlRequest(const SetUserLvlRequest& from);
  
  inline SetUserLvlRequest& operator=(const SetUserLvlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUserLvlRequest& default_instance();
  
  void Swap(SetUserLvlRequest* other);
  
  // implements Message ----------------------------------------------
  
  SetUserLvlRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetUserLvlRequest& from);
  void MergeFrom(const SetUserLvlRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string user_id = 10;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 10;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  
  // optional uint32 lvl = 20;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 20;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.SetUserLvlRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* user_id_;
  ::google::protobuf::uint32 lvl_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static SetUserLvlRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetUserLvlResponse : public ::google::protobuf::Message {
 public:
  SetUserLvlResponse();
  virtual ~SetUserLvlResponse();
  
  SetUserLvlResponse(const SetUserLvlResponse& from);
  
  inline SetUserLvlResponse& operator=(const SetUserLvlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUserLvlResponse& default_instance();
  
  void Swap(SetUserLvlResponse* other);
  
  // implements Message ----------------------------------------------
  
  SetUserLvlResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetUserLvlResponse& from);
  void MergeFrom(const SetUserLvlResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ucloud.ResponseCode rc = 10;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 10;
  inline const ::ucloud::ResponseCode& rc() const;
  inline ::ucloud::ResponseCode* mutable_rc();
  inline ::ucloud::ResponseCode* release_rc();
  
  // optional string user_id = 20;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 20;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  
  // optional uint32 lvl = 30;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 30;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.SetUserLvlResponse)
 private:
  inline void set_has_rc();
  inline void clear_has_rc();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ucloud::ResponseCode* rc_;
  ::std::string* user_id_;
  ::google::protobuf::uint32 lvl_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static SetUserLvlResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserLvlRequest : public ::google::protobuf::Message {
 public:
  GetUserLvlRequest();
  virtual ~GetUserLvlRequest();
  
  GetUserLvlRequest(const GetUserLvlRequest& from);
  
  inline GetUserLvlRequest& operator=(const GetUserLvlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserLvlRequest& default_instance();
  
  void Swap(GetUserLvlRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetUserLvlRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserLvlRequest& from);
  void MergeFrom(const GetUserLvlRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string user_id = 10;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 10;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetUserLvlRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* user_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetUserLvlRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserLvlResponse : public ::google::protobuf::Message {
 public:
  GetUserLvlResponse();
  virtual ~GetUserLvlResponse();
  
  GetUserLvlResponse(const GetUserLvlResponse& from);
  
  inline GetUserLvlResponse& operator=(const GetUserLvlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserLvlResponse& default_instance();
  
  void Swap(GetUserLvlResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetUserLvlResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserLvlResponse& from);
  void MergeFrom(const GetUserLvlResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ucloud.ResponseCode rc = 10;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 10;
  inline const ::ucloud::ResponseCode& rc() const;
  inline ::ucloud::ResponseCode* mutable_rc();
  inline ::ucloud::ResponseCode* release_rc();
  
  // optional string user_id = 20;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 20;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  
  // optional uint32 lvl = 30;
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 30;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);
  
  // optional uint32 min_grain_size = 40;
  inline bool has_min_grain_size() const;
  inline void clear_min_grain_size();
  static const int kMinGrainSizeFieldNumber = 40;
  inline ::google::protobuf::uint32 min_grain_size() const;
  inline void set_min_grain_size(::google::protobuf::uint32 value);
  
  // optional uint32 lvl_effective_time = 50;
  inline bool has_lvl_effective_time() const;
  inline void clear_lvl_effective_time();
  static const int kLvlEffectiveTimeFieldNumber = 50;
  inline ::google::protobuf::uint32 lvl_effective_time() const;
  inline void set_lvl_effective_time(::google::protobuf::uint32 value);
  
  // optional uint32 start_analysis_time = 60;
  inline bool has_start_analysis_time() const;
  inline void clear_start_analysis_time();
  static const int kStartAnalysisTimeFieldNumber = 60;
  inline ::google::protobuf::uint32 start_analysis_time() const;
  inline void set_start_analysis_time(::google::protobuf::uint32 value);
  
  // optional uint32 store_time = 70;
  inline bool has_store_time() const;
  inline void clear_store_time();
  static const int kStoreTimeFieldNumber = 70;
  inline ::google::protobuf::uint32 store_time() const;
  inline void set_store_time(::google::protobuf::uint32 value);
  
  // optional uint32 data_dimension = 80;
  inline bool has_data_dimension() const;
  inline void clear_data_dimension();
  static const int kDataDimensionFieldNumber = 80;
  inline ::google::protobuf::uint32 data_dimension() const;
  inline void set_data_dimension(::google::protobuf::uint32 value);
  
  // repeated uint32 item_ids = 90;
  inline int item_ids_size() const;
  inline void clear_item_ids();
  static const int kItemIdsFieldNumber = 90;
  inline ::google::protobuf::uint32 item_ids(int index) const;
  inline void set_item_ids(int index, ::google::protobuf::uint32 value);
  inline void add_item_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_ids();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetUserLvlResponse)
 private:
  inline void set_has_rc();
  inline void clear_has_rc();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_min_grain_size();
  inline void clear_has_min_grain_size();
  inline void set_has_lvl_effective_time();
  inline void clear_has_lvl_effective_time();
  inline void set_has_start_analysis_time();
  inline void clear_has_start_analysis_time();
  inline void set_has_store_time();
  inline void clear_has_store_time();
  inline void set_has_data_dimension();
  inline void clear_has_data_dimension();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ucloud::ResponseCode* rc_;
  ::std::string* user_id_;
  ::google::protobuf::uint32 lvl_;
  ::google::protobuf::uint32 min_grain_size_;
  ::google::protobuf::uint32 lvl_effective_time_;
  ::google::protobuf::uint32 start_analysis_time_;
  ::google::protobuf::uint32 store_time_;
  ::google::protobuf::uint32 data_dimension_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetUserLvlResponse* default_instance_;
};
// -------------------------------------------------------------------

class UuidExInfo : public ::google::protobuf::Message {
 public:
  UuidExInfo();
  virtual ~UuidExInfo();
  
  UuidExInfo(const UuidExInfo& from);
  
  inline UuidExInfo& operator=(const UuidExInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UuidExInfo& default_instance();
  
  void Swap(UuidExInfo* other);
  
  // implements Message ----------------------------------------------
  
  UuidExInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UuidExInfo& from);
  void MergeFrom(const UuidExInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string uuid = 10;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // optional uint32 created_time = 20;
  inline bool has_created_time() const;
  inline void clear_created_time();
  static const int kCreatedTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 created_time() const;
  inline void set_created_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.UuidExInfo)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_created_time();
  inline void clear_has_created_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uuid_;
  ::google::protobuf::uint32 created_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static UuidExInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetNetItemStatsForUserRequest : public ::google::protobuf::Message {
 public:
  GetNetItemStatsForUserRequest();
  virtual ~GetNetItemStatsForUserRequest();
  
  GetNetItemStatsForUserRequest(const GetNetItemStatsForUserRequest& from);
  
  inline GetNetItemStatsForUserRequest& operator=(const GetNetItemStatsForUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNetItemStatsForUserRequest& default_instance();
  
  void Swap(GetNetItemStatsForUserRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetNetItemStatsForUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNetItemStatsForUserRequest& from);
  void MergeFrom(const GetNetItemStatsForUserRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string uuid = 10;
  inline int uuid_size() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 10;
  inline const ::std::string& uuid(int index) const;
  inline ::std::string* mutable_uuid(int index);
  inline void set_uuid(int index, const ::std::string& value);
  inline void set_uuid(int index, const char* value);
  inline void set_uuid(int index, const char* value, size_t size);
  inline ::std::string* add_uuid();
  inline void add_uuid(const ::std::string& value);
  inline void add_uuid(const char* value);
  inline void add_uuid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& uuid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_uuid();
  
  // optional string object_name = 20;
  inline bool has_object_name() const;
  inline void clear_object_name();
  static const int kObjectNameFieldNumber = 20;
  inline const ::std::string& object_name() const;
  inline void set_object_name(const ::std::string& value);
  inline void set_object_name(const char* value);
  inline void set_object_name(const char* value, size_t size);
  inline ::std::string* mutable_object_name();
  inline ::std::string* release_object_name();
  
  // optional uint32 item_id = 22;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 22;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 region_id = 23;
  inline bool has_region_id() const;
  inline void clear_region_id();
  static const int kRegionIdFieldNumber = 23;
  inline ::google::protobuf::uint32 region_id() const;
  inline void set_region_id(::google::protobuf::uint32 value);
  
  // optional uint32 isp_id = 24;
  inline bool has_isp_id() const;
  inline void clear_isp_id();
  static const int kIspIdFieldNumber = 24;
  inline ::google::protobuf::uint32 isp_id() const;
  inline void set_isp_id(::google::protobuf::uint32 value);
  
  // optional uint32 start_time = 30;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 30;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);
  
  // optional uint32 end_time = 40;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 40;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);
  
  // optional string user_id = 50;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 50;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  
  // repeated .ucloud.unetanalysis.UuidExInfo uuid_ex_info = 60;
  inline int uuid_ex_info_size() const;
  inline void clear_uuid_ex_info();
  static const int kUuidExInfoFieldNumber = 60;
  inline const ::ucloud::unetanalysis::UuidExInfo& uuid_ex_info(int index) const;
  inline ::ucloud::unetanalysis::UuidExInfo* mutable_uuid_ex_info(int index);
  inline ::ucloud::unetanalysis::UuidExInfo* add_uuid_ex_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::UuidExInfo >&
      uuid_ex_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::UuidExInfo >*
      mutable_uuid_ex_info();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetNetItemStatsForUserRequest)
 private:
  inline void set_has_object_name();
  inline void clear_has_object_name();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_region_id();
  inline void clear_has_region_id();
  inline void set_has_isp_id();
  inline void clear_has_isp_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> uuid_;
  ::std::string* object_name_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 isp_id_;
  ::google::protobuf::uint32 start_time_;
  ::std::string* user_id_;
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::UuidExInfo > uuid_ex_info_;
  ::google::protobuf::uint32 end_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetNetItemStatsForUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemStatsForUserResponse : public ::google::protobuf::Message {
 public:
  GetItemStatsForUserResponse();
  virtual ~GetItemStatsForUserResponse();
  
  GetItemStatsForUserResponse(const GetItemStatsForUserResponse& from);
  
  inline GetItemStatsForUserResponse& operator=(const GetItemStatsForUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetItemStatsForUserResponse& default_instance();
  
  void Swap(GetItemStatsForUserResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetItemStatsForUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetItemStatsForUserResponse& from);
  void MergeFrom(const GetItemStatsForUserResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ucloud.ResponseCode rc = 10;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 10;
  inline const ::ucloud::ResponseCode& rc() const;
  inline ::ucloud::ResponseCode* mutable_rc();
  inline ::ucloud::ResponseCode* release_rc();
  
  // repeated .ucloud.unetanalysis.MonitorData monitor_data = 20;
  inline int monitor_data_size() const;
  inline void clear_monitor_data();
  static const int kMonitorDataFieldNumber = 20;
  inline const ::ucloud::unetanalysis::MonitorData& monitor_data(int index) const;
  inline ::ucloud::unetanalysis::MonitorData* mutable_monitor_data(int index);
  inline ::ucloud::unetanalysis::MonitorData* add_monitor_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >&
      monitor_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >*
      mutable_monitor_data();
  
  // @@protoc_insertion_point(class_scope:ucloud.unetanalysis.GetItemStatsForUserResponse)
 private:
  inline void set_has_rc();
  inline void clear_has_rc();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ucloud::ResponseCode* rc_;
  ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData > monitor_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_AssignDesc_unetanalysis_2e177000_2e178000_2eproto();
  friend void protobuf_ShutdownFile_unetanalysis_2e177000_2e178000_2eproto();
  
  void InitAsDefaultInstance();
  static GetItemStatsForUserResponse* default_instance_;
};
// ===================================================================

static const int kRecordStatsRequestFieldNumber = 177001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::RecordStatsRequest >, 11, false >
  record_stats_request;
static const int kRecordStatsExRequestFieldNumber = 177002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::RecordStatsExRequest >, 11, false >
  record_stats_ex_request;
static const int kGetNetItemStatsRequestFieldNumber = 177003;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetNetItemStatsRequest >, 11, false >
  get_net_item_stats_request;
static const int kGetItemStatsResponseFieldNumber = 177004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetItemStatsResponse >, 11, false >
  get_item_stats_response;
static const int kGetNetRankRequestFieldNumber = 177005;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetNetRankRequest >, 11, false >
  get_net_rank_request;
static const int kGetNetRankResponseFieldNumber = 177006;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetNetRankResponse >, 11, false >
  get_net_rank_response;
static const int kGetIpsRequestFieldNumber = 177007;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetIpsRequest >, 11, false >
  get_ips_request;
static const int kGetIpsResponseFieldNumber = 177008;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetIpsResponse >, 11, false >
  get_ips_response;
static const int kPushIpsFileRequestFieldNumber = 177009;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::PushIpsFileRequest >, 11, false >
  push_ips_file_request;
static const int kSetUserLvlRequestFieldNumber = 177011;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::SetUserLvlRequest >, 11, false >
  set_user_lvl_request;
static const int kSetUserLvlResponseFieldNumber = 177012;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::SetUserLvlResponse >, 11, false >
  set_user_lvl_response;
static const int kGetUserLvlRequestFieldNumber = 177013;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetUserLvlRequest >, 11, false >
  get_user_lvl_request;
static const int kGetUserLvlResponseFieldNumber = 177014;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetUserLvlResponse >, 11, false >
  get_user_lvl_response;
static const int kGetNetItemStatsForUserRequestFieldNumber = 177015;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetNetItemStatsForUserRequest >, 11, false >
  get_net_item_stats_for_user_request;
static const int kGetItemStatsForUserResponseFieldNumber = 177016;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ucloud::Body,
    ::google::protobuf::internal::MessageTypeTraits< ::ucloud::unetanalysis::GetItemStatsForUserResponse >, 11, false >
  get_item_stats_for_user_response;

// ===================================================================

// StatsData

// required string uuid = 10;
inline bool StatsData::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatsData::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatsData::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatsData::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& StatsData::uuid() const {
  return *uuid_;
}
inline void StatsData::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void StatsData::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void StatsData::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatsData::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* StatsData::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 item_id = 20;
inline bool StatsData::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatsData::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatsData::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatsData::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 StatsData::item_id() const {
  return item_id_;
}
inline void StatsData::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 is_regional = 70;
inline bool StatsData::has_is_regional() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatsData::set_has_is_regional() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatsData::clear_has_is_regional() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatsData::clear_is_regional() {
  is_regional_ = 0u;
  clear_has_is_regional();
}
inline ::google::protobuf::uint32 StatsData::is_regional() const {
  return is_regional_;
}
inline void StatsData::set_is_regional(::google::protobuf::uint32 value) {
  set_has_is_regional();
  is_regional_ = value;
}

// required uint32 region_id = 30;
inline bool StatsData::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatsData::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatsData::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatsData::clear_region_id() {
  region_id_ = 0u;
  clear_has_region_id();
}
inline ::google::protobuf::uint32 StatsData::region_id() const {
  return region_id_;
}
inline void StatsData::set_region_id(::google::protobuf::uint32 value) {
  set_has_region_id();
  region_id_ = value;
}

// required uint32 isp_id = 40;
inline bool StatsData::has_isp_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatsData::set_has_isp_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatsData::clear_has_isp_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatsData::clear_isp_id() {
  isp_id_ = 0u;
  clear_has_isp_id();
}
inline ::google::protobuf::uint32 StatsData::isp_id() const {
  return isp_id_;
}
inline void StatsData::set_isp_id(::google::protobuf::uint32 value) {
  set_has_isp_id();
  isp_id_ = value;
}

// required string no_regional_key = 80;
inline bool StatsData::has_no_regional_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StatsData::set_has_no_regional_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StatsData::clear_has_no_regional_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StatsData::clear_no_regional_key() {
  if (no_regional_key_ != &::google::protobuf::internal::kEmptyString) {
    no_regional_key_->clear();
  }
  clear_has_no_regional_key();
}
inline const ::std::string& StatsData::no_regional_key() const {
  return *no_regional_key_;
}
inline void StatsData::set_no_regional_key(const ::std::string& value) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(value);
}
inline void StatsData::set_no_regional_key(const char* value) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(value);
}
inline void StatsData::set_no_regional_key(const char* value, size_t size) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatsData::mutable_no_regional_key() {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  return no_regional_key_;
}
inline ::std::string* StatsData::release_no_regional_key() {
  clear_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = no_regional_key_;
    no_regional_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint64 value = 50;
inline bool StatsData::has_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StatsData::set_has_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StatsData::clear_has_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StatsData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 StatsData::value() const {
  return value_;
}
inline void StatsData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// required uint32 time = 60;
inline bool StatsData::has_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StatsData::set_has_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StatsData::clear_has_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StatsData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 StatsData::time() const {
  return time_;
}
inline void StatsData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// RecordStatsRequest

// repeated .ucloud.unetanalysis.StatsData stats_data_list = 10;
inline int RecordStatsRequest::stats_data_list_size() const {
  return stats_data_list_.size();
}
inline void RecordStatsRequest::clear_stats_data_list() {
  stats_data_list_.Clear();
}
inline const ::ucloud::unetanalysis::StatsData& RecordStatsRequest::stats_data_list(int index) const {
  return stats_data_list_.Get(index);
}
inline ::ucloud::unetanalysis::StatsData* RecordStatsRequest::mutable_stats_data_list(int index) {
  return stats_data_list_.Mutable(index);
}
inline ::ucloud::unetanalysis::StatsData* RecordStatsRequest::add_stats_data_list() {
  return stats_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsData >&
RecordStatsRequest::stats_data_list() const {
  return stats_data_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsData >*
RecordStatsRequest::mutable_stats_data_list() {
  return &stats_data_list_;
}

// optional uint32 dpdk_id = 20;
inline bool RecordStatsRequest::has_dpdk_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecordStatsRequest::set_has_dpdk_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecordStatsRequest::clear_has_dpdk_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecordStatsRequest::clear_dpdk_id() {
  dpdk_id_ = 0u;
  clear_has_dpdk_id();
}
inline ::google::protobuf::uint32 RecordStatsRequest::dpdk_id() const {
  return dpdk_id_;
}
inline void RecordStatsRequest::set_dpdk_id(::google::protobuf::uint32 value) {
  set_has_dpdk_id();
  dpdk_id_ = value;
}

// -------------------------------------------------------------------

// StatsDataEx

// required string uuid = 10;
inline bool StatsDataEx::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatsDataEx::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatsDataEx::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatsDataEx::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& StatsDataEx::uuid() const {
  return *uuid_;
}
inline void StatsDataEx::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void StatsDataEx::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void StatsDataEx::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatsDataEx::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* StatsDataEx::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 item_id = 20;
inline bool StatsDataEx::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatsDataEx::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatsDataEx::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatsDataEx::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 StatsDataEx::item_id() const {
  return item_id_;
}
inline void StatsDataEx::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 is_regional = 90;
inline bool StatsDataEx::has_is_regional() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatsDataEx::set_has_is_regional() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatsDataEx::clear_has_is_regional() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatsDataEx::clear_is_regional() {
  is_regional_ = 0u;
  clear_has_is_regional();
}
inline ::google::protobuf::uint32 StatsDataEx::is_regional() const {
  return is_regional_;
}
inline void StatsDataEx::set_is_regional(::google::protobuf::uint32 value) {
  set_has_is_regional();
  is_regional_ = value;
}

// required uint32 region_id = 30;
inline bool StatsDataEx::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatsDataEx::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatsDataEx::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatsDataEx::clear_region_id() {
  region_id_ = 0u;
  clear_has_region_id();
}
inline ::google::protobuf::uint32 StatsDataEx::region_id() const {
  return region_id_;
}
inline void StatsDataEx::set_region_id(::google::protobuf::uint32 value) {
  set_has_region_id();
  region_id_ = value;
}

// required uint32 isp_id = 40;
inline bool StatsDataEx::has_isp_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatsDataEx::set_has_isp_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatsDataEx::clear_has_isp_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatsDataEx::clear_isp_id() {
  isp_id_ = 0u;
  clear_has_isp_id();
}
inline ::google::protobuf::uint32 StatsDataEx::isp_id() const {
  return isp_id_;
}
inline void StatsDataEx::set_isp_id(::google::protobuf::uint32 value) {
  set_has_isp_id();
  isp_id_ = value;
}

// required string no_regional_key = 100;
inline bool StatsDataEx::has_no_regional_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StatsDataEx::set_has_no_regional_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StatsDataEx::clear_has_no_regional_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StatsDataEx::clear_no_regional_key() {
  if (no_regional_key_ != &::google::protobuf::internal::kEmptyString) {
    no_regional_key_->clear();
  }
  clear_has_no_regional_key();
}
inline const ::std::string& StatsDataEx::no_regional_key() const {
  return *no_regional_key_;
}
inline void StatsDataEx::set_no_regional_key(const ::std::string& value) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(value);
}
inline void StatsDataEx::set_no_regional_key(const char* value) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(value);
}
inline void StatsDataEx::set_no_regional_key(const char* value, size_t size) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatsDataEx::mutable_no_regional_key() {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  return no_regional_key_;
}
inline ::std::string* StatsDataEx::release_no_regional_key() {
  clear_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = no_regional_key_;
    no_regional_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint64 value = 50;
inline bool StatsDataEx::has_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StatsDataEx::set_has_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StatsDataEx::clear_has_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StatsDataEx::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 StatsDataEx::value() const {
  return value_;
}
inline void StatsDataEx::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// required uint32 time = 60;
inline bool StatsDataEx::has_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StatsDataEx::set_has_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StatsDataEx::clear_has_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StatsDataEx::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 StatsDataEx::time() const {
  return time_;
}
inline void StatsDataEx::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 aggregator = 70;
inline bool StatsDataEx::has_aggregator() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StatsDataEx::set_has_aggregator() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StatsDataEx::clear_has_aggregator() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StatsDataEx::clear_aggregator() {
  aggregator_ = 0u;
  clear_has_aggregator();
}
inline ::google::protobuf::uint32 StatsDataEx::aggregator() const {
  return aggregator_;
}
inline void StatsDataEx::set_aggregator(::google::protobuf::uint32 value) {
  set_has_aggregator();
  aggregator_ = value;
}

// optional uint32 period = 80;
inline bool StatsDataEx::has_period() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StatsDataEx::set_has_period() {
  _has_bits_[0] |= 0x00000200u;
}
inline void StatsDataEx::clear_has_period() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void StatsDataEx::clear_period() {
  period_ = 0u;
  clear_has_period();
}
inline ::google::protobuf::uint32 StatsDataEx::period() const {
  return period_;
}
inline void StatsDataEx::set_period(::google::protobuf::uint32 value) {
  set_has_period();
  period_ = value;
}

// -------------------------------------------------------------------

// RecordStatsExRequest

// repeated .ucloud.unetanalysis.StatsDataEx stats_data_ex_list = 10;
inline int RecordStatsExRequest::stats_data_ex_list_size() const {
  return stats_data_ex_list_.size();
}
inline void RecordStatsExRequest::clear_stats_data_ex_list() {
  stats_data_ex_list_.Clear();
}
inline const ::ucloud::unetanalysis::StatsDataEx& RecordStatsExRequest::stats_data_ex_list(int index) const {
  return stats_data_ex_list_.Get(index);
}
inline ::ucloud::unetanalysis::StatsDataEx* RecordStatsExRequest::mutable_stats_data_ex_list(int index) {
  return stats_data_ex_list_.Mutable(index);
}
inline ::ucloud::unetanalysis::StatsDataEx* RecordStatsExRequest::add_stats_data_ex_list() {
  return stats_data_ex_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsDataEx >&
RecordStatsExRequest::stats_data_ex_list() const {
  return stats_data_ex_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsDataEx >*
RecordStatsExRequest::mutable_stats_data_ex_list() {
  return &stats_data_ex_list_;
}

// -------------------------------------------------------------------

// GetNetItemStatsRequest

// repeated string uuid = 10;
inline int GetNetItemStatsRequest::uuid_size() const {
  return uuid_.size();
}
inline void GetNetItemStatsRequest::clear_uuid() {
  uuid_.Clear();
}
inline const ::std::string& GetNetItemStatsRequest::uuid(int index) const {
  return uuid_.Get(index);
}
inline ::std::string* GetNetItemStatsRequest::mutable_uuid(int index) {
  return uuid_.Mutable(index);
}
inline void GetNetItemStatsRequest::set_uuid(int index, const ::std::string& value) {
  uuid_.Mutable(index)->assign(value);
}
inline void GetNetItemStatsRequest::set_uuid(int index, const char* value) {
  uuid_.Mutable(index)->assign(value);
}
inline void GetNetItemStatsRequest::set_uuid(int index, const char* value, size_t size) {
  uuid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetNetItemStatsRequest::add_uuid() {
  return uuid_.Add();
}
inline void GetNetItemStatsRequest::add_uuid(const ::std::string& value) {
  uuid_.Add()->assign(value);
}
inline void GetNetItemStatsRequest::add_uuid(const char* value) {
  uuid_.Add()->assign(value);
}
inline void GetNetItemStatsRequest::add_uuid(const char* value, size_t size) {
  uuid_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetNetItemStatsRequest::uuid() const {
  return uuid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetNetItemStatsRequest::mutable_uuid() {
  return &uuid_;
}

// optional string object_name = 20;
inline bool GetNetItemStatsRequest::has_object_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNetItemStatsRequest::set_has_object_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNetItemStatsRequest::clear_has_object_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNetItemStatsRequest::clear_object_name() {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    object_name_->clear();
  }
  clear_has_object_name();
}
inline const ::std::string& GetNetItemStatsRequest::object_name() const {
  return *object_name_;
}
inline void GetNetItemStatsRequest::set_object_name(const ::std::string& value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void GetNetItemStatsRequest::set_object_name(const char* value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void GetNetItemStatsRequest::set_object_name(const char* value, size_t size) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetNetItemStatsRequest::mutable_object_name() {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  return object_name_;
}
inline ::std::string* GetNetItemStatsRequest::release_object_name() {
  clear_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_name_;
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 item_id = 22;
inline bool GetNetItemStatsRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetNetItemStatsRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetNetItemStatsRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetNetItemStatsRequest::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 GetNetItemStatsRequest::item_id() const {
  return item_id_;
}
inline void GetNetItemStatsRequest::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 region_id = 23;
inline bool GetNetItemStatsRequest::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetNetItemStatsRequest::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetNetItemStatsRequest::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetNetItemStatsRequest::clear_region_id() {
  region_id_ = 0u;
  clear_has_region_id();
}
inline ::google::protobuf::uint32 GetNetItemStatsRequest::region_id() const {
  return region_id_;
}
inline void GetNetItemStatsRequest::set_region_id(::google::protobuf::uint32 value) {
  set_has_region_id();
  region_id_ = value;
}

// optional uint32 isp_id = 24;
inline bool GetNetItemStatsRequest::has_isp_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetNetItemStatsRequest::set_has_isp_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetNetItemStatsRequest::clear_has_isp_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetNetItemStatsRequest::clear_isp_id() {
  isp_id_ = 0u;
  clear_has_isp_id();
}
inline ::google::protobuf::uint32 GetNetItemStatsRequest::isp_id() const {
  return isp_id_;
}
inline void GetNetItemStatsRequest::set_isp_id(::google::protobuf::uint32 value) {
  set_has_isp_id();
  isp_id_ = value;
}

// optional uint32 start_time = 30;
inline bool GetNetItemStatsRequest::has_start_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetNetItemStatsRequest::set_has_start_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetNetItemStatsRequest::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetNetItemStatsRequest::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 GetNetItemStatsRequest::start_time() const {
  return start_time_;
}
inline void GetNetItemStatsRequest::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint32 end_time = 40;
inline bool GetNetItemStatsRequest::has_end_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetNetItemStatsRequest::set_has_end_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetNetItemStatsRequest::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetNetItemStatsRequest::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 GetNetItemStatsRequest::end_time() const {
  return end_time_;
}
inline void GetNetItemStatsRequest::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional uint32 user_grain = 50;
inline bool GetNetItemStatsRequest::has_user_grain() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetNetItemStatsRequest::set_has_user_grain() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetNetItemStatsRequest::clear_has_user_grain() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetNetItemStatsRequest::clear_user_grain() {
  user_grain_ = 0u;
  clear_has_user_grain();
}
inline ::google::protobuf::uint32 GetNetItemStatsRequest::user_grain() const {
  return user_grain_;
}
inline void GetNetItemStatsRequest::set_user_grain(::google::protobuf::uint32 value) {
  set_has_user_grain();
  user_grain_ = value;
}

// -------------------------------------------------------------------

// StatsInfo

// required int64 value = 10;
inline bool StatsInfo::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatsInfo::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatsInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatsInfo::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 StatsInfo::value() const {
  return value_;
}
inline void StatsInfo::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// required uint32 value_time = 20;
inline bool StatsInfo::has_value_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatsInfo::set_has_value_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatsInfo::clear_has_value_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatsInfo::clear_value_time() {
  value_time_ = 0u;
  clear_has_value_time();
}
inline ::google::protobuf::uint32 StatsInfo::value_time() const {
  return value_time_;
}
inline void StatsInfo::set_value_time(::google::protobuf::uint32 value) {
  set_has_value_time();
  value_time_ = value;
}

// required uint32 region_id = 31;
inline bool StatsInfo::has_region_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatsInfo::set_has_region_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatsInfo::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatsInfo::clear_region_id() {
  region_id_ = 0u;
  clear_has_region_id();
}
inline ::google::protobuf::uint32 StatsInfo::region_id() const {
  return region_id_;
}
inline void StatsInfo::set_region_id(::google::protobuf::uint32 value) {
  set_has_region_id();
  region_id_ = value;
}

// required uint32 isp_id = 32;
inline bool StatsInfo::has_isp_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatsInfo::set_has_isp_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatsInfo::clear_has_isp_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatsInfo::clear_isp_id() {
  isp_id_ = 0u;
  clear_has_isp_id();
}
inline ::google::protobuf::uint32 StatsInfo::isp_id() const {
  return isp_id_;
}
inline void StatsInfo::set_isp_id(::google::protobuf::uint32 value) {
  set_has_isp_id();
  isp_id_ = value;
}

// optional string no_regional_key = 33;
inline bool StatsInfo::has_no_regional_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatsInfo::set_has_no_regional_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatsInfo::clear_has_no_regional_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatsInfo::clear_no_regional_key() {
  if (no_regional_key_ != &::google::protobuf::internal::kEmptyString) {
    no_regional_key_->clear();
  }
  clear_has_no_regional_key();
}
inline const ::std::string& StatsInfo::no_regional_key() const {
  return *no_regional_key_;
}
inline void StatsInfo::set_no_regional_key(const ::std::string& value) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(value);
}
inline void StatsInfo::set_no_regional_key(const char* value) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(value);
}
inline void StatsInfo::set_no_regional_key(const char* value, size_t size) {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  no_regional_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatsInfo::mutable_no_regional_key() {
  set_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    no_regional_key_ = new ::std::string;
  }
  return no_regional_key_;
}
inline ::std::string* StatsInfo::release_no_regional_key() {
  clear_has_no_regional_key();
  if (no_regional_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = no_regional_key_;
    no_regional_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// MonitorData

// optional string uuid = 10;
inline bool MonitorData::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonitorData::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonitorData::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonitorData::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& MonitorData::uuid() const {
  return *uuid_;
}
inline void MonitorData::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void MonitorData::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void MonitorData::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MonitorData::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* MonitorData::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 item_id = 30;
inline bool MonitorData::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonitorData::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonitorData::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonitorData::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 MonitorData::item_id() const {
  return item_id_;
}
inline void MonitorData::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 is_regional = 20;
inline bool MonitorData::has_is_regional() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonitorData::set_has_is_regional() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonitorData::clear_has_is_regional() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonitorData::clear_is_regional() {
  is_regional_ = 0u;
  clear_has_is_regional();
}
inline ::google::protobuf::uint32 MonitorData::is_regional() const {
  return is_regional_;
}
inline void MonitorData::set_is_regional(::google::protobuf::uint32 value) {
  set_has_is_regional();
  is_regional_ = value;
}

// optional uint32 grain_size = 60;
inline bool MonitorData::has_grain_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonitorData::set_has_grain_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonitorData::clear_has_grain_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonitorData::clear_grain_size() {
  grain_size_ = 0u;
  clear_has_grain_size();
}
inline ::google::protobuf::uint32 MonitorData::grain_size() const {
  return grain_size_;
}
inline void MonitorData::set_grain_size(::google::protobuf::uint32 value) {
  set_has_grain_size();
  grain_size_ = value;
}

// repeated .ucloud.unetanalysis.StatsInfo stats_info = 40;
inline int MonitorData::stats_info_size() const {
  return stats_info_.size();
}
inline void MonitorData::clear_stats_info() {
  stats_info_.Clear();
}
inline const ::ucloud::unetanalysis::StatsInfo& MonitorData::stats_info(int index) const {
  return stats_info_.Get(index);
}
inline ::ucloud::unetanalysis::StatsInfo* MonitorData::mutable_stats_info(int index) {
  return stats_info_.Mutable(index);
}
inline ::ucloud::unetanalysis::StatsInfo* MonitorData::add_stats_info() {
  return stats_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsInfo >&
MonitorData::stats_info() const {
  return stats_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::StatsInfo >*
MonitorData::mutable_stats_info() {
  return &stats_info_;
}

// -------------------------------------------------------------------

// GetItemStatsResponse

// required .ucloud.ResponseCode rc = 10;
inline bool GetItemStatsResponse::has_rc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemStatsResponse::set_has_rc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemStatsResponse::clear_has_rc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemStatsResponse::clear_rc() {
  if (rc_ != NULL) rc_->::ucloud::ResponseCode::Clear();
  clear_has_rc();
}
inline const ::ucloud::ResponseCode& GetItemStatsResponse::rc() const {
  return rc_ != NULL ? *rc_ : *default_instance_->rc_;
}
inline ::ucloud::ResponseCode* GetItemStatsResponse::mutable_rc() {
  set_has_rc();
  if (rc_ == NULL) rc_ = new ::ucloud::ResponseCode;
  return rc_;
}
inline ::ucloud::ResponseCode* GetItemStatsResponse::release_rc() {
  clear_has_rc();
  ::ucloud::ResponseCode* temp = rc_;
  rc_ = NULL;
  return temp;
}

// repeated .ucloud.unetanalysis.MonitorData monitor_data = 20;
inline int GetItemStatsResponse::monitor_data_size() const {
  return monitor_data_.size();
}
inline void GetItemStatsResponse::clear_monitor_data() {
  monitor_data_.Clear();
}
inline const ::ucloud::unetanalysis::MonitorData& GetItemStatsResponse::monitor_data(int index) const {
  return monitor_data_.Get(index);
}
inline ::ucloud::unetanalysis::MonitorData* GetItemStatsResponse::mutable_monitor_data(int index) {
  return monitor_data_.Mutable(index);
}
inline ::ucloud::unetanalysis::MonitorData* GetItemStatsResponse::add_monitor_data() {
  return monitor_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >&
GetItemStatsResponse::monitor_data() const {
  return monitor_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >*
GetItemStatsResponse::mutable_monitor_data() {
  return &monitor_data_;
}

// -------------------------------------------------------------------

// GetNetRankRequest

// required uint32 item_id = 10;
inline bool GetNetRankRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNetRankRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNetRankRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNetRankRequest::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 GetNetRankRequest::item_id() const {
  return item_id_;
}
inline void GetNetRankRequest::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 start = 20;
inline bool GetNetRankRequest::has_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNetRankRequest::set_has_start() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNetRankRequest::clear_has_start() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNetRankRequest::clear_start() {
  start_ = 0u;
  clear_has_start();
}
inline ::google::protobuf::uint32 GetNetRankRequest::start() const {
  return start_;
}
inline void GetNetRankRequest::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
}

// optional uint32 end = 30;
inline bool GetNetRankRequest::has_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetNetRankRequest::set_has_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetNetRankRequest::clear_has_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetNetRankRequest::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 GetNetRankRequest::end() const {
  return end_;
}
inline void GetNetRankRequest::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
}

// optional uint32 rank_type = 40;
inline bool GetNetRankRequest::has_rank_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetNetRankRequest::set_has_rank_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetNetRankRequest::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetNetRankRequest::clear_rank_type() {
  rank_type_ = 0u;
  clear_has_rank_type();
}
inline ::google::protobuf::uint32 GetNetRankRequest::rank_type() const {
  return rank_type_;
}
inline void GetNetRankRequest::set_rank_type(::google::protobuf::uint32 value) {
  set_has_rank_type();
  rank_type_ = value;
}

// optional uint32 time = 50;
inline bool GetNetRankRequest::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetNetRankRequest::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetNetRankRequest::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetNetRankRequest::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GetNetRankRequest::time() const {
  return time_;
}
inline void GetNetRankRequest::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// RankData

// optional string uuid = 10;
inline bool RankData::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankData::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankData::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankData::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& RankData::uuid() const {
  return *uuid_;
}
inline void RankData::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void RankData::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void RankData::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankData::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* RankData::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 value = 20;
inline bool RankData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 RankData::value() const {
  return value_;
}
inline void RankData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// GetNetRankResponse

// required .ucloud.ResponseCode rc = 10;
inline bool GetNetRankResponse::has_rc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNetRankResponse::set_has_rc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNetRankResponse::clear_has_rc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNetRankResponse::clear_rc() {
  if (rc_ != NULL) rc_->::ucloud::ResponseCode::Clear();
  clear_has_rc();
}
inline const ::ucloud::ResponseCode& GetNetRankResponse::rc() const {
  return rc_ != NULL ? *rc_ : *default_instance_->rc_;
}
inline ::ucloud::ResponseCode* GetNetRankResponse::mutable_rc() {
  set_has_rc();
  if (rc_ == NULL) rc_ = new ::ucloud::ResponseCode;
  return rc_;
}
inline ::ucloud::ResponseCode* GetNetRankResponse::release_rc() {
  clear_has_rc();
  ::ucloud::ResponseCode* temp = rc_;
  rc_ = NULL;
  return temp;
}

// optional uint32 item_id = 20;
inline bool GetNetRankResponse::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNetRankResponse::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNetRankResponse::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNetRankResponse::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 GetNetRankResponse::item_id() const {
  return item_id_;
}
inline void GetNetRankResponse::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// repeated .ucloud.unetanalysis.RankData rank_data = 30;
inline int GetNetRankResponse::rank_data_size() const {
  return rank_data_.size();
}
inline void GetNetRankResponse::clear_rank_data() {
  rank_data_.Clear();
}
inline const ::ucloud::unetanalysis::RankData& GetNetRankResponse::rank_data(int index) const {
  return rank_data_.Get(index);
}
inline ::ucloud::unetanalysis::RankData* GetNetRankResponse::mutable_rank_data(int index) {
  return rank_data_.Mutable(index);
}
inline ::ucloud::unetanalysis::RankData* GetNetRankResponse::add_rank_data() {
  return rank_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::RankData >&
GetNetRankResponse::rank_data() const {
  return rank_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::RankData >*
GetNetRankResponse::mutable_rank_data() {
  return &rank_data_;
}

// -------------------------------------------------------------------

// Ip_Info

// optional string ip = 10;
inline bool Ip_Info::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ip_Info::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ip_Info::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ip_Info::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& Ip_Info::ip() const {
  return *ip_;
}
inline void Ip_Info::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Ip_Info::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Ip_Info::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Ip_Info::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* Ip_Info::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 account_id = 20;
inline bool Ip_Info::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ip_Info::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ip_Info::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ip_Info::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 Ip_Info::account_id() const {
  return account_id_;
}
inline void Ip_Info::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// -------------------------------------------------------------------

// GetIpsRequest

// required string regin = 10;
inline bool GetIpsRequest::has_regin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetIpsRequest::set_has_regin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetIpsRequest::clear_has_regin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetIpsRequest::clear_regin() {
  if (regin_ != &::google::protobuf::internal::kEmptyString) {
    regin_->clear();
  }
  clear_has_regin();
}
inline const ::std::string& GetIpsRequest::regin() const {
  return *regin_;
}
inline void GetIpsRequest::set_regin(const ::std::string& value) {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  regin_->assign(value);
}
inline void GetIpsRequest::set_regin(const char* value) {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  regin_->assign(value);
}
inline void GetIpsRequest::set_regin(const char* value, size_t size) {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  regin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetIpsRequest::mutable_regin() {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  return regin_;
}
inline ::std::string* GetIpsRequest::release_regin() {
  clear_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = regin_;
    regin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GetIpsResponse

// required string regin = 10;
inline bool GetIpsResponse::has_regin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetIpsResponse::set_has_regin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetIpsResponse::clear_has_regin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetIpsResponse::clear_regin() {
  if (regin_ != &::google::protobuf::internal::kEmptyString) {
    regin_->clear();
  }
  clear_has_regin();
}
inline const ::std::string& GetIpsResponse::regin() const {
  return *regin_;
}
inline void GetIpsResponse::set_regin(const ::std::string& value) {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  regin_->assign(value);
}
inline void GetIpsResponse::set_regin(const char* value) {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  regin_->assign(value);
}
inline void GetIpsResponse::set_regin(const char* value, size_t size) {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  regin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetIpsResponse::mutable_regin() {
  set_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    regin_ = new ::std::string;
  }
  return regin_;
}
inline ::std::string* GetIpsResponse::release_regin() {
  clear_has_regin();
  if (regin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = regin_;
    regin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .ucloud.unetanalysis.Ip_Info ips = 20;
inline int GetIpsResponse::ips_size() const {
  return ips_.size();
}
inline void GetIpsResponse::clear_ips() {
  ips_.Clear();
}
inline const ::ucloud::unetanalysis::Ip_Info& GetIpsResponse::ips(int index) const {
  return ips_.Get(index);
}
inline ::ucloud::unetanalysis::Ip_Info* GetIpsResponse::mutable_ips(int index) {
  return ips_.Mutable(index);
}
inline ::ucloud::unetanalysis::Ip_Info* GetIpsResponse::add_ips() {
  return ips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::Ip_Info >&
GetIpsResponse::ips() const {
  return ips_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::Ip_Info >*
GetIpsResponse::mutable_ips() {
  return &ips_;
}

// -------------------------------------------------------------------

// PushIpsFileRequest

// required string name = 10;
inline bool PushIpsFileRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushIpsFileRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushIpsFileRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushIpsFileRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PushIpsFileRequest::name() const {
  return *name_;
}
inline void PushIpsFileRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PushIpsFileRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PushIpsFileRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushIpsFileRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PushIpsFileRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SetUserLvlRequest

// required string user_id = 10;
inline bool SetUserLvlRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetUserLvlRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetUserLvlRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetUserLvlRequest::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::kEmptyString) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& SetUserLvlRequest::user_id() const {
  return *user_id_;
}
inline void SetUserLvlRequest::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void SetUserLvlRequest::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void SetUserLvlRequest::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetUserLvlRequest::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  return user_id_;
}
inline ::std::string* SetUserLvlRequest::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 lvl = 20;
inline bool SetUserLvlRequest::has_lvl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetUserLvlRequest::set_has_lvl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetUserLvlRequest::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetUserLvlRequest::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 SetUserLvlRequest::lvl() const {
  return lvl_;
}
inline void SetUserLvlRequest::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}

// -------------------------------------------------------------------

// SetUserLvlResponse

// required .ucloud.ResponseCode rc = 10;
inline bool SetUserLvlResponse::has_rc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetUserLvlResponse::set_has_rc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetUserLvlResponse::clear_has_rc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetUserLvlResponse::clear_rc() {
  if (rc_ != NULL) rc_->::ucloud::ResponseCode::Clear();
  clear_has_rc();
}
inline const ::ucloud::ResponseCode& SetUserLvlResponse::rc() const {
  return rc_ != NULL ? *rc_ : *default_instance_->rc_;
}
inline ::ucloud::ResponseCode* SetUserLvlResponse::mutable_rc() {
  set_has_rc();
  if (rc_ == NULL) rc_ = new ::ucloud::ResponseCode;
  return rc_;
}
inline ::ucloud::ResponseCode* SetUserLvlResponse::release_rc() {
  clear_has_rc();
  ::ucloud::ResponseCode* temp = rc_;
  rc_ = NULL;
  return temp;
}

// optional string user_id = 20;
inline bool SetUserLvlResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetUserLvlResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetUserLvlResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetUserLvlResponse::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::kEmptyString) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& SetUserLvlResponse::user_id() const {
  return *user_id_;
}
inline void SetUserLvlResponse::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void SetUserLvlResponse::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void SetUserLvlResponse::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetUserLvlResponse::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  return user_id_;
}
inline ::std::string* SetUserLvlResponse::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 lvl = 30;
inline bool SetUserLvlResponse::has_lvl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetUserLvlResponse::set_has_lvl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetUserLvlResponse::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetUserLvlResponse::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 SetUserLvlResponse::lvl() const {
  return lvl_;
}
inline void SetUserLvlResponse::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}

// -------------------------------------------------------------------

// GetUserLvlRequest

// required string user_id = 10;
inline bool GetUserLvlRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserLvlRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserLvlRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserLvlRequest::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::kEmptyString) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& GetUserLvlRequest::user_id() const {
  return *user_id_;
}
inline void GetUserLvlRequest::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void GetUserLvlRequest::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void GetUserLvlRequest::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserLvlRequest::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  return user_id_;
}
inline ::std::string* GetUserLvlRequest::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GetUserLvlResponse

// required .ucloud.ResponseCode rc = 10;
inline bool GetUserLvlResponse::has_rc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserLvlResponse::set_has_rc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserLvlResponse::clear_has_rc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserLvlResponse::clear_rc() {
  if (rc_ != NULL) rc_->::ucloud::ResponseCode::Clear();
  clear_has_rc();
}
inline const ::ucloud::ResponseCode& GetUserLvlResponse::rc() const {
  return rc_ != NULL ? *rc_ : *default_instance_->rc_;
}
inline ::ucloud::ResponseCode* GetUserLvlResponse::mutable_rc() {
  set_has_rc();
  if (rc_ == NULL) rc_ = new ::ucloud::ResponseCode;
  return rc_;
}
inline ::ucloud::ResponseCode* GetUserLvlResponse::release_rc() {
  clear_has_rc();
  ::ucloud::ResponseCode* temp = rc_;
  rc_ = NULL;
  return temp;
}

// optional string user_id = 20;
inline bool GetUserLvlResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserLvlResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserLvlResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserLvlResponse::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::kEmptyString) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& GetUserLvlResponse::user_id() const {
  return *user_id_;
}
inline void GetUserLvlResponse::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void GetUserLvlResponse::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void GetUserLvlResponse::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserLvlResponse::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  return user_id_;
}
inline ::std::string* GetUserLvlResponse::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 lvl = 30;
inline bool GetUserLvlResponse::has_lvl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserLvlResponse::set_has_lvl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserLvlResponse::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserLvlResponse::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::lvl() const {
  return lvl_;
}
inline void GetUserLvlResponse::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}

// optional uint32 min_grain_size = 40;
inline bool GetUserLvlResponse::has_min_grain_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserLvlResponse::set_has_min_grain_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserLvlResponse::clear_has_min_grain_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserLvlResponse::clear_min_grain_size() {
  min_grain_size_ = 0u;
  clear_has_min_grain_size();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::min_grain_size() const {
  return min_grain_size_;
}
inline void GetUserLvlResponse::set_min_grain_size(::google::protobuf::uint32 value) {
  set_has_min_grain_size();
  min_grain_size_ = value;
}

// optional uint32 lvl_effective_time = 50;
inline bool GetUserLvlResponse::has_lvl_effective_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserLvlResponse::set_has_lvl_effective_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserLvlResponse::clear_has_lvl_effective_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserLvlResponse::clear_lvl_effective_time() {
  lvl_effective_time_ = 0u;
  clear_has_lvl_effective_time();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::lvl_effective_time() const {
  return lvl_effective_time_;
}
inline void GetUserLvlResponse::set_lvl_effective_time(::google::protobuf::uint32 value) {
  set_has_lvl_effective_time();
  lvl_effective_time_ = value;
}

// optional uint32 start_analysis_time = 60;
inline bool GetUserLvlResponse::has_start_analysis_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserLvlResponse::set_has_start_analysis_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserLvlResponse::clear_has_start_analysis_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserLvlResponse::clear_start_analysis_time() {
  start_analysis_time_ = 0u;
  clear_has_start_analysis_time();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::start_analysis_time() const {
  return start_analysis_time_;
}
inline void GetUserLvlResponse::set_start_analysis_time(::google::protobuf::uint32 value) {
  set_has_start_analysis_time();
  start_analysis_time_ = value;
}

// optional uint32 store_time = 70;
inline bool GetUserLvlResponse::has_store_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserLvlResponse::set_has_store_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserLvlResponse::clear_has_store_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserLvlResponse::clear_store_time() {
  store_time_ = 0u;
  clear_has_store_time();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::store_time() const {
  return store_time_;
}
inline void GetUserLvlResponse::set_store_time(::google::protobuf::uint32 value) {
  set_has_store_time();
  store_time_ = value;
}

// optional uint32 data_dimension = 80;
inline bool GetUserLvlResponse::has_data_dimension() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetUserLvlResponse::set_has_data_dimension() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetUserLvlResponse::clear_has_data_dimension() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetUserLvlResponse::clear_data_dimension() {
  data_dimension_ = 0u;
  clear_has_data_dimension();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::data_dimension() const {
  return data_dimension_;
}
inline void GetUserLvlResponse::set_data_dimension(::google::protobuf::uint32 value) {
  set_has_data_dimension();
  data_dimension_ = value;
}

// repeated uint32 item_ids = 90;
inline int GetUserLvlResponse::item_ids_size() const {
  return item_ids_.size();
}
inline void GetUserLvlResponse::clear_item_ids() {
  item_ids_.Clear();
}
inline ::google::protobuf::uint32 GetUserLvlResponse::item_ids(int index) const {
  return item_ids_.Get(index);
}
inline void GetUserLvlResponse::set_item_ids(int index, ::google::protobuf::uint32 value) {
  item_ids_.Set(index, value);
}
inline void GetUserLvlResponse::add_item_ids(::google::protobuf::uint32 value) {
  item_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUserLvlResponse::item_ids() const {
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUserLvlResponse::mutable_item_ids() {
  return &item_ids_;
}

// -------------------------------------------------------------------

// UuidExInfo

// optional string uuid = 10;
inline bool UuidExInfo::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UuidExInfo::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UuidExInfo::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UuidExInfo::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& UuidExInfo::uuid() const {
  return *uuid_;
}
inline void UuidExInfo::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void UuidExInfo::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void UuidExInfo::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UuidExInfo::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* UuidExInfo::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 created_time = 20;
inline bool UuidExInfo::has_created_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UuidExInfo::set_has_created_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UuidExInfo::clear_has_created_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UuidExInfo::clear_created_time() {
  created_time_ = 0u;
  clear_has_created_time();
}
inline ::google::protobuf::uint32 UuidExInfo::created_time() const {
  return created_time_;
}
inline void UuidExInfo::set_created_time(::google::protobuf::uint32 value) {
  set_has_created_time();
  created_time_ = value;
}

// -------------------------------------------------------------------

// GetNetItemStatsForUserRequest

// repeated string uuid = 10;
inline int GetNetItemStatsForUserRequest::uuid_size() const {
  return uuid_.size();
}
inline void GetNetItemStatsForUserRequest::clear_uuid() {
  uuid_.Clear();
}
inline const ::std::string& GetNetItemStatsForUserRequest::uuid(int index) const {
  return uuid_.Get(index);
}
inline ::std::string* GetNetItemStatsForUserRequest::mutable_uuid(int index) {
  return uuid_.Mutable(index);
}
inline void GetNetItemStatsForUserRequest::set_uuid(int index, const ::std::string& value) {
  uuid_.Mutable(index)->assign(value);
}
inline void GetNetItemStatsForUserRequest::set_uuid(int index, const char* value) {
  uuid_.Mutable(index)->assign(value);
}
inline void GetNetItemStatsForUserRequest::set_uuid(int index, const char* value, size_t size) {
  uuid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetNetItemStatsForUserRequest::add_uuid() {
  return uuid_.Add();
}
inline void GetNetItemStatsForUserRequest::add_uuid(const ::std::string& value) {
  uuid_.Add()->assign(value);
}
inline void GetNetItemStatsForUserRequest::add_uuid(const char* value) {
  uuid_.Add()->assign(value);
}
inline void GetNetItemStatsForUserRequest::add_uuid(const char* value, size_t size) {
  uuid_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetNetItemStatsForUserRequest::uuid() const {
  return uuid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetNetItemStatsForUserRequest::mutable_uuid() {
  return &uuid_;
}

// optional string object_name = 20;
inline bool GetNetItemStatsForUserRequest::has_object_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_object_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNetItemStatsForUserRequest::clear_has_object_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNetItemStatsForUserRequest::clear_object_name() {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    object_name_->clear();
  }
  clear_has_object_name();
}
inline const ::std::string& GetNetItemStatsForUserRequest::object_name() const {
  return *object_name_;
}
inline void GetNetItemStatsForUserRequest::set_object_name(const ::std::string& value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void GetNetItemStatsForUserRequest::set_object_name(const char* value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void GetNetItemStatsForUserRequest::set_object_name(const char* value, size_t size) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetNetItemStatsForUserRequest::mutable_object_name() {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  return object_name_;
}
inline ::std::string* GetNetItemStatsForUserRequest::release_object_name() {
  clear_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_name_;
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 item_id = 22;
inline bool GetNetItemStatsForUserRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetNetItemStatsForUserRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetNetItemStatsForUserRequest::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 GetNetItemStatsForUserRequest::item_id() const {
  return item_id_;
}
inline void GetNetItemStatsForUserRequest::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 region_id = 23;
inline bool GetNetItemStatsForUserRequest::has_region_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_region_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetNetItemStatsForUserRequest::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetNetItemStatsForUserRequest::clear_region_id() {
  region_id_ = 0u;
  clear_has_region_id();
}
inline ::google::protobuf::uint32 GetNetItemStatsForUserRequest::region_id() const {
  return region_id_;
}
inline void GetNetItemStatsForUserRequest::set_region_id(::google::protobuf::uint32 value) {
  set_has_region_id();
  region_id_ = value;
}

// optional uint32 isp_id = 24;
inline bool GetNetItemStatsForUserRequest::has_isp_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_isp_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetNetItemStatsForUserRequest::clear_has_isp_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetNetItemStatsForUserRequest::clear_isp_id() {
  isp_id_ = 0u;
  clear_has_isp_id();
}
inline ::google::protobuf::uint32 GetNetItemStatsForUserRequest::isp_id() const {
  return isp_id_;
}
inline void GetNetItemStatsForUserRequest::set_isp_id(::google::protobuf::uint32 value) {
  set_has_isp_id();
  isp_id_ = value;
}

// optional uint32 start_time = 30;
inline bool GetNetItemStatsForUserRequest::has_start_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_start_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetNetItemStatsForUserRequest::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetNetItemStatsForUserRequest::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 GetNetItemStatsForUserRequest::start_time() const {
  return start_time_;
}
inline void GetNetItemStatsForUserRequest::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint32 end_time = 40;
inline bool GetNetItemStatsForUserRequest::has_end_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_end_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetNetItemStatsForUserRequest::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetNetItemStatsForUserRequest::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 GetNetItemStatsForUserRequest::end_time() const {
  return end_time_;
}
inline void GetNetItemStatsForUserRequest::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional string user_id = 50;
inline bool GetNetItemStatsForUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetNetItemStatsForUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetNetItemStatsForUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetNetItemStatsForUserRequest::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::kEmptyString) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& GetNetItemStatsForUserRequest::user_id() const {
  return *user_id_;
}
inline void GetNetItemStatsForUserRequest::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void GetNetItemStatsForUserRequest::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
}
inline void GetNetItemStatsForUserRequest::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetNetItemStatsForUserRequest::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    user_id_ = new ::std::string;
  }
  return user_id_;
}
inline ::std::string* GetNetItemStatsForUserRequest::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .ucloud.unetanalysis.UuidExInfo uuid_ex_info = 60;
inline int GetNetItemStatsForUserRequest::uuid_ex_info_size() const {
  return uuid_ex_info_.size();
}
inline void GetNetItemStatsForUserRequest::clear_uuid_ex_info() {
  uuid_ex_info_.Clear();
}
inline const ::ucloud::unetanalysis::UuidExInfo& GetNetItemStatsForUserRequest::uuid_ex_info(int index) const {
  return uuid_ex_info_.Get(index);
}
inline ::ucloud::unetanalysis::UuidExInfo* GetNetItemStatsForUserRequest::mutable_uuid_ex_info(int index) {
  return uuid_ex_info_.Mutable(index);
}
inline ::ucloud::unetanalysis::UuidExInfo* GetNetItemStatsForUserRequest::add_uuid_ex_info() {
  return uuid_ex_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::UuidExInfo >&
GetNetItemStatsForUserRequest::uuid_ex_info() const {
  return uuid_ex_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::UuidExInfo >*
GetNetItemStatsForUserRequest::mutable_uuid_ex_info() {
  return &uuid_ex_info_;
}

// -------------------------------------------------------------------

// GetItemStatsForUserResponse

// required .ucloud.ResponseCode rc = 10;
inline bool GetItemStatsForUserResponse::has_rc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemStatsForUserResponse::set_has_rc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemStatsForUserResponse::clear_has_rc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemStatsForUserResponse::clear_rc() {
  if (rc_ != NULL) rc_->::ucloud::ResponseCode::Clear();
  clear_has_rc();
}
inline const ::ucloud::ResponseCode& GetItemStatsForUserResponse::rc() const {
  return rc_ != NULL ? *rc_ : *default_instance_->rc_;
}
inline ::ucloud::ResponseCode* GetItemStatsForUserResponse::mutable_rc() {
  set_has_rc();
  if (rc_ == NULL) rc_ = new ::ucloud::ResponseCode;
  return rc_;
}
inline ::ucloud::ResponseCode* GetItemStatsForUserResponse::release_rc() {
  clear_has_rc();
  ::ucloud::ResponseCode* temp = rc_;
  rc_ = NULL;
  return temp;
}

// repeated .ucloud.unetanalysis.MonitorData monitor_data = 20;
inline int GetItemStatsForUserResponse::monitor_data_size() const {
  return monitor_data_.size();
}
inline void GetItemStatsForUserResponse::clear_monitor_data() {
  monitor_data_.Clear();
}
inline const ::ucloud::unetanalysis::MonitorData& GetItemStatsForUserResponse::monitor_data(int index) const {
  return monitor_data_.Get(index);
}
inline ::ucloud::unetanalysis::MonitorData* GetItemStatsForUserResponse::mutable_monitor_data(int index) {
  return monitor_data_.Mutable(index);
}
inline ::ucloud::unetanalysis::MonitorData* GetItemStatsForUserResponse::add_monitor_data() {
  return monitor_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >&
GetItemStatsForUserResponse::monitor_data() const {
  return monitor_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ucloud::unetanalysis::MonitorData >*
GetItemStatsForUserResponse::mutable_monitor_data() {
  return &monitor_data_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace unetanalysis
}  // namespace ucloud

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ucloud::unetanalysis::MessageType>() {
  return ucloud::unetanalysis::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_unetanalysis_2e177000_2e178000_2eproto__INCLUDED
