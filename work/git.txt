git archive  --format=tar `git log --max-count=1 --pretty=format:%H` | xz --threads 3 > my.xz
xzcat -qq my.xz | git get-tar-commit-id

git archive  --format=tar `git log --max-count=1 --pretty=format:%H` > a.tar
git get-tar-commit-id < a.tar

git merge test
git branch --merge  branch_name
git branch --no-merge branch_name

git branch -d c2
error: The branch 'c2' is not fully merged.
If you are sure you want to delete it, run 'git branch -D c2'

rm the file in the stage or registor if in the stage is the same as git reset HEAD
保留文件在工作目录
# git rm --cached

diff the stage with registor
# git diff --cached
diff untracked with stage
# git diff

git log --max-count=1 --pretty=format:%H    //get git id
git log --pretty=format:"%H %h %s"
git log --author 'wx'
git log -2

git remote add test http://gitlab.ucloudadmin.com/ucloud-kernel/ksplice.git
git fetch test
git checkout test/master
git checkout -b master
git push test master 
git remote rename test origin
git remote rm origin

git push origin --tags


git fetch:把remote新的更新到origin/master branch

一般我们使用衍合的目的，是想要得到一个能在远程分支上干净应用的补丁 — 比如某些项目你不是维护者，但想帮点忙的话，最好用衍合：先在自己的一个分支里进行开发，当准备向主项目提交补丁的时候，根据最新的origin/master 进行一次衍合操作然后再提交，这样维护者就不需要做任何整合工作

git remote add 添加远程仓库, 大多时候远程是空的本地push上去, 也可以远程是有的,拉到本地分支 
# git remote add origin wxztt@192.168.190.129:~/work/test/git/remote


! [remote rejected] master -> master (branch is currently checked out)  
1.git config receive.denyCurrentBranch ignore
2. 在初始化远程仓库时最好使用 git --bare init, 没有工作目录



merge:
wxztt@wxztt-family:~/work/test/git/origin$ git checkout merge
切换到分支 'merge'
wxztt@wxztt-family:~/work/test/git/origin$ git log --oneline
ebe06a8 merge
ae44ab0 4
0a5cd0f Merge branch 'develop'
1c997d9 2
5345ef1 3
5f44b94 1
wxztt@wxztt-family:~/work/test/git/origin$ git checkout master-merge
切换到分支 'master-merge'
wxztt@wxztt-family:~/work/test/git/origin$ git log --oneline
baf28ef 5
ae44ab0 4
0a5cd0f Merge branch 'develop'
1c997d9 2
5345ef1 3
5f44b94 1
wxztt@wxztt-family:~/work/test/git/origin$ git merge merge
Merge made by the 'recursive' strategy.
 merge.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 merge.txt
wxztt@wxztt-family:~/work/test/git/origin$ git log --oneline
728c83e Merge branch 'merge' into master-merge
ebe06a8 merge
baf28ef 5
ae44ab0 4
0a5cd0f Merge branch 'develop'
1c997d9 2
5345ef1 3
5f44b94 1


rebase:
wxztt@wxztt-family:~/work/test/git/origin$ git checkout rebase
切换到分支 'rebase'
wxztt@wxztt-family:~/work/test/git/origin$ git log --oneline
0639978 rebase
ae44ab0 4
0a5cd0f Merge branch 'develop'
1c997d9 2
5345ef1 3
5f44b94 1
wxztt@wxztt-family:~/work/test/git/origin$ git checkout master-rebase
切换到分支 'master-rebase'
wxztt@wxztt-family:~/work/test/git/origin$ git log --oneline
baf28ef 5
ae44ab0 4
0a5cd0f Merge branch 'develop'
1c997d9 2
5345ef1 3
5f44b94 1
wxztt@wxztt-family:~/work/test/git/origin$ git rebase rebase
首先，重置头指针以便在上面重放您的工作...
正应用：5
wxztt@wxztt-family:~/work/test/git/origin$ git log --oneline
d46392c 5
0639978 rebase
ae44ab0 4
0a5cd0f Merge branch 'develop'
1c997d9 2
5345ef1 3
5f44b94 1



